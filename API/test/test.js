
process.env.JWT_KEY = "secrete";
const assert = require('chai').assert;

const UserController = require('../api/controllers/user');
const MemberController = require('../api/controllers/project_members');
const ProjectController = require('../api/controllers/project');
const TaskController = require('../api/controllers/tasks');


let mongoose = require("mongoose");

let ProjectMember = require('../api/models/project_members');
let Project = require('../api/models/project');
let User = require('../api/models/user');
let Tasks = require('../api/models/tasks');


let chai = require('chai');
let chaiHttp = require('chai-http');

let should = chai.should();
let expect =chai.expect;

chai.use(chaiHttp);


// // get all users
describe('/GET User', () => {
    it('it should GET all the User', (done) => {
        chai.request('http://localhost:3000')
            .get('/user/getusers')
            .end((err, res) => {
                res.should.have.status(200);
                done();
            });
    });
});


// // get all project members
describe('/GET/:id Project Members', () => {
    it('it should GET all the Project Members', (done) => {
        chai.request('http://localhost:3000')
            .get('/project_members/'+ "5b27efc9e4d8703efc8a9cab")
            .end((err, res) => {
                res.should.have.status(201);
                done();
            });
    });
});


//create task
describe('/POST project', () => {

    it('it should POST a projects ', (done) => {
        let tasks = {
            task: "Testing task",
            description: "This is generated by testing",
            projectID: "5b27efc9e4d8703efc8a9cab",
            startdate: "2018-06-30",
            enddate: "2018-06-30"
        }
        chai.request('http://localhost:3000')
            .post('/tasks')
            .send(tasks)
            .end((err, res) => {
                res.should.have.status(201);
                res.body.should.be.a('object');
                done();
            });
    });
});


// // get a project by Id
describe('/GET/:id project', () => {
    it('it should GET a project by the given id', (done) => {
        chai.request('http://localhost:3000')
            .get('/project/one/' + "5b27efc9e4d8703efc8a9cab")

            .end((err, res) => {
                res.should.have.status(200);

                done();
            });

    });
});



//Update Task 
describe('/PUT/:id project', () => {
    it('it should UPDATE a project given the id', (done) => {
        let task = new Tasks(
            {
                task: "Testing task Updated",
                description: "This is generated by testing",
                startdate: "2018-07-30",
                enddate: "2018-12-22"
            })

        chai.request('http://localhost:3000')
            .put('/tasks/' + '5b27ee18ae643c3288890941')
            .send(task)
            .end((err, res) => {
                res.should.have.status(200);
                done();
            });

    });
});


// Delete Task
describe('/DELETE/:id project', () => {
    it('it should DELETE a project given the id', (done) => {

        chai.request('http://localhost:3000')
            .delete('/tasks/' + "5b277d369d95e504b007f022")
            .end((err, res) => {
                res.should.have.status(200);
                done();
            });
    });
});


// Logged in and create new project
describe('/Login user', () => {
    it('Login a user', (done) => {
        let user = {
            email: "a@gmail.com",
            password: "123",
        }
        chai.request('http://localhost:3000')
            .post('/user/login')
            .send(user)
            .end((err, res) => {
                res.should.have.status(200);
                expect(res.body).to.have.property('token');
                let token = "bearer "+res.body.token;

                describe('/POST project', () => {
                    it('Posting a project and response success', (done) => {
                        let project = {
                            name: "AAF1",
                            startdate: "2018-06-17",
                            enddate: "2018-06-28",
                            description: "Testing aaf",
                            userid: "5b1d265180dd4b1510168eed",
                        }
                        chai.request('http://localhost:3000')
                            .post('/project')
                            .set('Authorization', token)
                            .send(project)
                            .end((err, res) => {
                                res.should.have.status(201);
                                done();
                            });
                    });
                });
                done();
            });
    });
});
